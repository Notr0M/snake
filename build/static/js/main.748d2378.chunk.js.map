{"version":3,"sources":["initial/inititalState.js","hooks/useSnake.js","components/snake.js","components/apple.js","components/board.js","components/Submit.js","components/score.js","components/Users.js","components/gameWrapper.js","components/withName.js","components/template.js","components/App.js","serviceWorker.js","index.js"],"names":["UP","x","y","DOWN","LEFT","RIGHT","initialSnake","initialApple","reducer","state","action","snakes","status","apple","header","_","forEach","tail","Array","from","snake","console","log","count","length","first","push","random","map","index","key","style","position","borderRadius","width","height","left","top","backgroundColor","React","memo","initSnake","setScore","speed","setStatus","useReducer","dispath","useState","dir","setDir","prevDir","setPrevDir","keydownEvent","toLowerCase","useEffect","run","setInterval","clearInterval","window","addEventListener","removeEventListener","useSnake","prev","Math","floor","margin","border","marginTop","textAlign","score","setUser","isRunning","localName","name","setName","loading","setLoading","lock","setLock","error","msg","err","setErr","checkName","includes","Header","as","Form","onSubmit","user","id","src","Promise","resolve","setTimeout","then","res","catch","display","Input","readOnly","value","onChange","e","nickname","target","changeName","placeholder","Button","disabled","color","zIndex","Score","setSpeed","open","setOpen","toggle","localStorage","getItem","SetUsernameModal","setNameToLocal","setItem","Menu","vertical","Item","Label","floating","circular","Icon","link","onClick","Dropdown","options","text","Divider","Submit","Modal","size","Content","Segment","basic","SeUsername","Actions","negative","positive","load","setLoad","users","setUsers","show","setShow","reject","Grid","padded","Placeholder","fluid","image","Line","Paragraph","Row","Transition","animation","visible","duration","className","List","selection","verticalAlign","i","Image","avatar","floated","ActionButton","type","WrapperButton","cb","fitted","children","StaticTable","Table","singleLine","HeaderCell","Body","Cell","warning","Popup","content","trigger","StatusElement","withName","Component","Column","Message","horizontal","inverted","opacity","Group","Or","only","Users","props","dark","setDark","Container","stackable","columns","Checkbox","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.748d2378.chunk.js","sourcesContent":["const UP = { x: 0, y: 1 },\r\n  DOWN = { x: 0, y: -1 },\r\n  LEFT = { x: -1, y: 0 },\r\n  RIGHT = { x: 1, y: 0 };\r\n\r\nexport { UP, DOWN, LEFT, RIGHT };\r\n\r\nexport const initialSnake = [{ x: 1, y: 0 }];\r\n\r\nexport const initialApple = {\r\n  x: 5, // 0 -> 19\r\n  y: 0, // 0 -> -9\r\n};\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  initialSnake,\r\n  initialApple,\r\n  UP,\r\n  DOWN,\r\n  LEFT,\r\n  RIGHT,\r\n} from \"initial/inititalState\";\r\n\r\nfunction reducer(state, action) {\r\n  if (action === \"init\") {\r\n    return {\r\n      ...state,\r\n      snakes: [...initialSnake],\r\n      status: \"running\",\r\n      apple: initialApple,\r\n    };\r\n  }\r\n  const snakes = [...state.snakes];\r\n  const apple = { ...state.apple };\r\n  const header = snakes[0];\r\n  let status = \"running\";\r\n\r\n  _.forEach(_.tail(Array.from(snakes)), (snake) => {\r\n    if (header.x === snake.x && header.y === snake.y) {\r\n      console.log(\"opps\");\r\n      status = \"failed\";\r\n    }\r\n  });\r\n  if (status === \"running\") {\r\n    for (let count = snakes.length - 1; count > -1; --count) {\r\n      if (count === 0) {\r\n        snakes[count].x += action.x;\r\n        snakes[count].y += action.y;\r\n      } else {\r\n        snakes[count].x = snakes[count - 1].x;\r\n        snakes[count].y = snakes[count - 1].y;\r\n      }\r\n    }\r\n\r\n    if (snakes[0].x === 20) {\r\n      snakes[0].x = 0;\r\n    }\r\n    if (snakes[0].x === -1) {\r\n      snakes[0].x = 19;\r\n    }\r\n    if (snakes[0].y === -10) {\r\n      snakes[0].y = 0;\r\n    }\r\n    if (snakes[0].y === 1) {\r\n      snakes[0].y = -9;\r\n    }\r\n\r\n    if (_.first(snakes).x === apple.x && _.first(snakes).y === apple.y) {\r\n      snakes.push(apple);\r\n\r\n      apple.x = _.random(19);\r\n      apple.y = _.random(-9);\r\n    }\r\n  }\r\n  return { ...state, snakes: snakes, status: status, apple: apple };\r\n}\r\n\r\nexport default (initSnake, status, setStatus, speed) => {\r\n  const [state, dispath] = React.useReducer(reducer, {\r\n    snakes: initSnake,\r\n    apple: initialApple,\r\n    status: status,\r\n  });\r\n\r\n  const [dir, setDir] = React.useState(RIGHT);\r\n\r\n  const [prevDir, setPrevDir] = React.useState(\"\"); // temp\r\n\r\n  const keydownEvent = ({ key }) => {\r\n    switch (key.toLowerCase()) {\r\n      case \"d\":\r\n        setDir(RIGHT);\r\n        return;\r\n      case \"s\":\r\n        setDir(DOWN);\r\n        return;\r\n      case \"w\":\r\n        setDir(UP);\r\n        return;\r\n      case \"a\":\r\n        setDir(LEFT);\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  // check performance here\r\n  React.useEffect(() => {\r\n    const run = setInterval(() => {\r\n      if (state.status === \"failed\") {\r\n        clearInterval(run);\r\n        setStatus(\"failed\");\r\n        return;\r\n      }\r\n      if (status === \"init\") {\r\n        setStatus(\"running\");\r\n        return;\r\n      }\r\n      if (state.status === \"paused\" || status === \"paused\") {\r\n        clearInterval(run);\r\n        setStatus(\"paused\");\r\n        return;\r\n      }\r\n      if (state.status === \"idle\" || status === \"idle\") {\r\n        clearInterval(run);\r\n        setStatus(\"idle\");\r\n        return;\r\n      }\r\n      if (prevDir.x === dir.x || prevDir.y === dir.y) {\r\n        dispath(prevDir);\r\n        return;\r\n      }\r\n\r\n      setPrevDir(dir);\r\n      dispath(dir);\r\n    }, speed); // 40 - 65 - 100\r\n\r\n    return () => clearInterval(run);\r\n  }, [state]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(status);\r\n    if (status === \"running\") {\r\n      window.addEventListener(\"keydown\", keydownEvent);\r\n      dispath(dir);\r\n    }\r\n    if (status === \"init\") {\r\n      window.addEventListener(\"keydown\", keydownEvent);\r\n\r\n      dispath(\"init\");\r\n      setDir(RIGHT);\r\n    }\r\n\r\n    return () => window.removeEventListener(\"keydown\", keydownEvent);\r\n  }, [status]);\r\n\r\n  return [state.snakes, state.apple];\r\n};\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nexport default ({ snakes }) => {\r\n  return (\r\n    <>\r\n      {snakes.map((snake, index) => (\r\n        <span\r\n          key={index}\r\n          style={{\r\n            position: \"absolute\",\r\n            borderRadius: \"16px\",\r\n            width: \"30px\",\r\n            height: \"30px\",\r\n            left: `${snake.x * 30}px`,\r\n            top: `${snake.y * -30}px`,\r\n            backgroundColor: \"black\",\r\n          }}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default React.memo(({ position }) => {\r\n  console.log(\"apple\");\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        borderRadius: \"16px\",\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        left: `${position.x * 30}px`,\r\n        top: `${position.y * -30}px`,\r\n        backgroundColor: \"green\",\r\n      }}\r\n    ></div>\r\n  );\r\n});\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nimport useSnake from \"hooks/useSnake.js\";\r\nimport useApple from \"hooks/useApple.js\";\r\n\r\nimport Snake from \"./snake.js\";\r\nimport Apple from \"./apple.js\";\r\n\r\nconst initSnake = [{ x: 1, y: 0 }];\r\nconst initApple = { x: 5, y: 0 };\r\n\r\nexport default ({ setScore, status, speed, setStatus }) => {\r\n  const [snakes, position] = useSnake(initSnake, status, setStatus, speed);\r\n  React.useEffect(() => {\r\n    if (snakes.length > 1)\r\n      setScore((prev) => prev + Math.floor(Math.random() * (16 - 10) + 10));\r\n  }, [snakes.length]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"auto\",\r\n        position: \"relative\",\r\n        borderRadius: 6,\r\n        border: \"3px solid #808080\",\r\n        marginTop: \"20px\",\r\n        backgroundColor: \"#F5F5DC\",\r\n        textAlign: \"center\",\r\n        width: \"600px\",\r\n        height: \"300px\",\r\n      }}\r\n    >\r\n      <Snake snakes={snakes} />\r\n      <Apple position={position} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Label,\r\n  Input,\r\n  Icon,\r\n  Message,\r\n  Form,\r\n  Header,\r\n  Segment,\r\n  Button,\r\n  TransitionablePortal,\r\n} from \"semantic-ui-react\";\r\n\r\nfunction postUser(user) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(user);\r\n    }, 1500);\r\n  });\r\n}\r\n\r\nexport default React.memo(({ score, setUser, isRunning, localName }) => {\r\n  const [name, setName] = useState(localName);\r\n  const [loading, setLoading] = useState(false);\r\n  const [lock, setLock] = useState(false);\r\n  const [err, setErr] = useState({\r\n    error: false,\r\n    msg: \"\",\r\n  });\r\n  React.useEffect(() => {\r\n    setName(localName);\r\n  }, [localName]);\r\n  const submitUser = () => {\r\n    if (checkName(name)) {\r\n      setErr({\r\n        error: true,\r\n        msg: \"Nickname could not be empty either include space\",\r\n      });\r\n      return;\r\n    }\r\n    if (score === 0) {\r\n      setErr({\r\n        error: err.error,\r\n        msg: \"Your score is 0 right now\",\r\n      });\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const test = {\r\n      id: score,\r\n      name: name,\r\n      src: \"https://react.semantic-ui.com/images/avatar/small/daniel.jpg\",\r\n      score: score,\r\n    };\r\n    postUser(test)\r\n      .then((res) => {\r\n        setUser(res);\r\n        setLoading(false);\r\n        setLock(true);\r\n      })\r\n      .catch((err) => console.log(\"err in submit\"));\r\n  };\r\n\r\n  function checkName(name) {\r\n    return name.includes(\" \") || name === \"\" ? true : false;\r\n  }\r\n\r\n  const changeName = (e) => {\r\n    const nickname = e.target.value;\r\n    if (checkName(nickname)) {\r\n      setErr({\r\n        error: true,\r\n        msg: \"Nickname could not be empty either include space\",\r\n      });\r\n      return;\r\n    }\r\n    setErr({\r\n      error: false,\r\n      msg: \"\",\r\n    });\r\n    setName(nickname);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <style>\r\n        {`\r\n          #score-submit-input {\r\n            color: #808080;\r\n            opacity: ${name ? 0.5 : 1};\r\n          }\r\n        `}\r\n      </style>\r\n      <Header as=\"h4\">You can submit your score here if you wish. </Header>\r\n\r\n      <Form onSubmit={submitUser}>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Form.Input\r\n            readOnly={isRunning || lock || name}\r\n            error={err.error}\r\n            value={name}\r\n            onChange={(e) => changeName(e)}\r\n            placeholder=\"Nickname\"\r\n            id=\"score-submit-input\"\r\n          />\r\n          <Form.Button\r\n            loading={loading}\r\n            disabled={isRunning || loading || lock}\r\n            color=\"blue\"\r\n          >\r\n            Submit\r\n          </Form.Button>\r\n        </div>\r\n        {err && (\r\n          <span\r\n            style={{\r\n              position: \"fixed\",\r\n              left: \"40%\",\r\n              top: \"25%\",\r\n              color: \"#DC143C\",\r\n              textAlign: \"right\",\r\n              zIndex: 10,\r\n            }}\r\n          >\r\n            {err.msg}\r\n          </span>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Icon,\r\n  Dropdown,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Menu,\r\n  Loader,\r\n  Label,\r\n  Divider,\r\n} from \"semantic-ui-react\";\r\n\r\nimport Submit from \"./Submit\";\r\n\r\nfunction getSpeeds() {\r\n  return [\r\n    {\r\n      text: \"Fast\",\r\n      value: 100,\r\n      key: 100,\r\n    },\r\n    {\r\n      text: \"Very Fast\",\r\n      value: 50,\r\n      key: 50,\r\n    },\r\n    {\r\n      text: \"Insane\",\r\n      value: 20,\r\n      key: 20,\r\n    },\r\n    {\r\n      text: \"Legend\",\r\n      value: 1,\r\n      key: 1,\r\n      disabled: true,\r\n    },\r\n  ];\r\n}\r\n\r\nconst Score = ({ score, status, setSpeed }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [err, setErr] = useState(\"\");\r\n  const toggle = status === \"running\" || status === \"paused\" ? true : false;\r\n  let name = localStorage.getItem(\"jouje-name\");\r\n\r\n  const setNameToLocal = (name) => {\r\n    localStorage\r\n      ? localStorage.setItem(\"jouje-name\", name)\r\n      : setErr(\"localStorage is disabled\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    name = localStorage.getItem(\"jouje-name\");\r\n  }, [open]);\r\n  console.log(\"score name \", name);\r\n  return (\r\n    <>\r\n      <SetUsernameModal\r\n        open={open}\r\n        setOpen={setOpen}\r\n        setNameToLocal={setNameToLocal}\r\n        localName={name}\r\n      />\r\n      <Menu vertical>\r\n        <Menu.Item>\r\n          <span id=\"score-span\">Score:</span>\r\n          {!score ? (\r\n            <Label\r\n              floating={true}\r\n              style={{ top: 12, left: \"80%\" }}\r\n              as=\"a\"\r\n              circular\r\n            >\r\n              0\r\n            </Label>\r\n          ) : (\r\n            <Label floating={true} style={{ top: 12, left: \"80%\" }} as=\"a\">\r\n              {score}\r\n            </Label>\r\n          )}\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <span id=\"score-span\">Name:</span>\r\n          {name ? (\r\n            <>\r\n              <Icon\r\n                link\r\n                color=\"yellow\"\r\n                name=\"edit\"\r\n                onClick={() => setOpen(true)}\r\n              />\r\n              <Label>{name}</Label>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Icon\r\n                link\r\n                color=\"green\"\r\n                name=\"plus\"\r\n                onClick={() => setOpen(true)}\r\n              />\r\n              <Label>unspecified</Label>\r\n            </>\r\n          )}\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <span id=\"score-span\">Speed: </span>\r\n          <Label as=\"div\">\r\n            <Dropdown\r\n              disabled={toggle}\r\n              placeholder=\"Choose Speed\"\r\n              options={getSpeeds()}\r\n              onChange={(e, { value }) => setSpeed(value)}\r\n            />\r\n          </Label>\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Divider />\r\n      <Submit score={score} localName={name} />\r\n    </>\r\n  );\r\n};\r\nexport default Score;\r\n\r\nfunction SetUsernameModal({ open, setOpen, localName, setNameToLocal }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [err, setErr] = useState({\r\n    error: false,\r\n    msg: \"\",\r\n  });\r\n\r\n  return (\r\n    <Modal size=\"mini\" open={open}>\r\n      <Modal.Header>Insert Your Nickname</Modal.Header>\r\n      <Modal.Content>\r\n        <p>\r\n          Your Nickname won't save anywhere but your browser's local storage.\r\n        </p>\r\n        <Segment basic>\r\n          current name:{\" \"}\r\n          {localName ? <Label>{localName}</Label> : <Label>unspecified</Label>}\r\n        </Segment>\r\n        <SeUsername err={err} setErr={setErr} setName={setName} />\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button negative onClick={() => setOpen(false)}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          positive\r\n          disabled={err.error}\r\n          onClick={() => {\r\n            setNameToLocal(name);\r\n            setOpen(false);\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction SeUsername({ err, setErr, setName }) {\r\n  function checkName(nickname) {\r\n    return nickname.includes(\" \") || nickname === \"\" ? true : false;\r\n  }\r\n\r\n  const changeName = (e) => {\r\n    const nickname = e.target.value;\r\n    if (checkName(nickname)) {\r\n      setErr({\r\n        error: true,\r\n        msg: \"Nickname could not be empty either include space\",\r\n      });\r\n      return;\r\n    }\r\n    setErr({\r\n      error: false,\r\n      msg: \"\",\r\n    });\r\n\r\n    setName(nickname);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Input placeholder=\"Nickname\" onChange={(e) => changeName(e)} />\r\n      </div>\r\n\r\n      <span\r\n        style={{\r\n          position: \"relative\",\r\n\r\n          color: \"#DC143C\",\r\n        }}\r\n      >\r\n        {err.msg}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Transition,\r\n  Image,\r\n  Placeholder,\r\n  List,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\n\r\nfunction getUsers() {\r\n  return [\r\n    {\r\n      id: 256,\r\n      name: \"Helen\",\r\n      score: 743,\r\n      src: \"/images/helen.jpg\",\r\n    },\r\n    {\r\n      id: 146,\r\n      name: \"Chris\",\r\n      score: 1243,\r\n      src: \"/images/christian.jpg\",\r\n    },\r\n    {\r\n      id: 1256,\r\n      name: \"Daniel\",\r\n      score: 1256,\r\n      src: \"/images/daniel.jpg\",\r\n    },\r\n    {\r\n      id: 990,\r\n      name: \"Joe\",\r\n      score: 990,\r\n      src: \"/images/joe.jpg\",\r\n    },\r\n    {\r\n      id: 1314,\r\n      name: \"Carl\",\r\n      score: 801,\r\n      src: \"images/jenny.jpg\",\r\n    },\r\n    {\r\n      id: 125265,\r\n      name: \"Justen\",\r\n      score: 899,\r\n      src: \"images/justen.jpg\",\r\n    },\r\n    {\r\n      id: 125265,\r\n      name: \"Elliot\",\r\n      score: 899,\r\n      src: \"images/elliot.jpg\",\r\n    },\r\n    {\r\n      id: 568,\r\n      name: \"Steve\",\r\n      score: 899,\r\n      src: \"images/steve.jpg\",\r\n    },\r\n    {\r\n      id: 166,\r\n      name: \"Stevie\",\r\n      score: 899,\r\n      src: \"images/stevie.jpg\",\r\n    },\r\n    {\r\n      id: 1656,\r\n      name: \"Matt\",\r\n      score: 411,\r\n      src: \"images/matt.jpg\",\r\n    },\r\n    {\r\n      id: 1662,\r\n      name: \"Laura\",\r\n      score: 333,\r\n      src: \"images/laura.jpg\",\r\n    },\r\n  ];\r\n}\r\n\r\nfunction fetchUsers() {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(getUsers());\r\n    }, 2000);\r\n  });\r\n}\r\n\r\nexport default () => {\r\n  const [load, setLoad] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // if (user.id > 0) {\r\n    //   setUsers((prev) => {\r\n    //     const state = [...prev];\r\n    //     state.push(user);\r\n    //     return _.orderBy(state, [\"score\"], [\"desc\"]);\r\n    //   });\r\n    //   return;\r\n    // }\r\n    fetchUsers()\r\n      .then((res) => {\r\n        setUsers(res);\r\n        setLoad(false);\r\n        setTimeout(() => {\r\n          setShow(true);\r\n        }, 0);\r\n      })\r\n      .catch((err) => console.log(\"Err fetching users\"));\r\n  }, []);\r\n  console.log(\"user\");\r\n  return (\r\n    <Grid>\r\n      <style>\r\n        {`\r\n          .users-container {\r\n            width: 100%;\r\n            height: 28rem;\r\n            overflow-y: auto;\r\n            scrollbar-width: thin;\r\n            scrollbar-color: #4B0082 #F0FFFF; \r\n          }\r\n        `}\r\n      </style>\r\n      {load ? (\r\n        <Segment padded=\"very\" style={{ width: \"100%\", height: \"20rem\" }}>\r\n          <Placeholder fluid>\r\n            <Placeholder.Header image>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Header>\r\n            <Placeholder.Paragraph>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Paragraph>\r\n          </Placeholder>\r\n        </Segment>\r\n      ) : (\r\n        <Grid.Row>\r\n          {\" \"}\r\n          <Transition animation=\"jiggle\" visible={show} duration={500}>\r\n            <Segment padded className=\"users-container\">\r\n              <List selection verticalAlign=\"middle\">\r\n                {users.map((user, i) => (\r\n                  <List.Item key={user.id}>\r\n                    <Image avatar src={user.src} />\r\n                    <List.Content>\r\n                      <List.Header>{user.name}: </List.Header>\r\n                    </List.Content>\r\n                    <List.Content style={{ marginTop: 6 }} floated=\"right\">\r\n                      {user.score}\r\n                    </List.Content>\r\n                  </List.Item>\r\n                ))}\r\n              </List>\r\n            </Segment>\r\n          </Transition>\r\n        </Grid.Row>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Label,\r\n  Popup,\r\n  Message,\r\n  Table,\r\n  Button,\r\n  Icon,\r\n  Divider,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { withName } from \"./withName\";\r\nimport Board from \"./board.js\";\r\nimport Score from \"./score.js\";\r\nimport Users from \"./Users\";\r\n\r\nfunction gameWrapper() {\r\n  const [score, setScore] = useState(0);\r\n  const [status, setStatus] = useState(\"idle\");\r\n  const [speed, setSpeed] = useState(200);\r\n\r\n  React.useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid.Column width={4}>\r\n        <Score score={score} status={status} setSpeed={setSpeed} />\r\n      </Grid.Column>\r\n      <Grid.Column textAlign=\"center\" width={2}>\r\n        <ActionButton status={status} setStatus={setStatus} />\r\n        <Divider />\r\n        <StatusElement status={status} />\r\n      </Grid.Column>\r\n      <Grid.Column width={4}>\r\n        <Message floating>\r\n          Default speed is{\" \"}\r\n          <Label color=\"red\" horizontal basic>\r\n            Fast\r\n          </Label>\r\n        </Message>\r\n      </Grid.Column>\r\n      <Grid.Column width={4}>\r\n        <Segment basic>\r\n          <Popup\r\n            content=\"Disabled temporarily\"\r\n            inverted\r\n            style={{ opacity: 0.7 }}\r\n            position=\"right center\"\r\n            trigger={\r\n              <Button.Group>\r\n                <Button disabled>Login</Button>\r\n                <Button.Or />\r\n                <Button disabled positive>\r\n                  Signup\r\n                </Button>\r\n              </Button.Group>\r\n            }\r\n          />\r\n        </Segment>\r\n      </Grid.Column>\r\n      <Grid.Column width={16}>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column width={4}>\r\n              <StaticTable />\r\n            </Grid.Column>\r\n            <Grid.Column\r\n              width={9}\r\n              only=\"large screen\"\r\n              style={{\r\n                top: -140,\r\n              }}\r\n            >\r\n              <Board\r\n                status={status}\r\n                speed={speed}\r\n                setStatus={setStatus}\r\n                setScore={setScore}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column\r\n              style={{\r\n                top: \"-12rem\",\r\n              }}\r\n              width={3}\r\n            >\r\n              <Users />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Grid.Column>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ActionButton({ status, setStatus }) {\r\n  const action = (type) => {\r\n    setStatus(type);\r\n  };\r\n\r\n  switch (status) {\r\n    case \"running\":\r\n      return (\r\n        <WrapperButton cb={action} type=\"paused\">\r\n          <Icon fitted name=\"pause\" />\r\n        </WrapperButton>\r\n      );\r\n    case \"paused\":\r\n      return (\r\n        <WrapperButton cb={action} type=\"running\">\r\n          <Icon fitted name=\"play\" />\r\n        </WrapperButton>\r\n      );\r\n    case \"failed\":\r\n      return (\r\n        <WrapperButton cb={action} type=\"init\">\r\n          <Icon fitted name=\"redo\" />\r\n        </WrapperButton>\r\n      );\r\n    case \"idle\":\r\n      return (\r\n        <WrapperButton cb={action} type=\"running\">\r\n          <Icon fitted name=\"play\" />\r\n        </WrapperButton>\r\n      );\r\n    default:\r\n      return (\r\n        <WrapperButton cb={action} type=\"running\">\r\n          <Icon fitted name=\"play\" />\r\n        </WrapperButton>\r\n      );\r\n  }\r\n}\r\n\r\nfunction WrapperButton({ cb, type, children }) {\r\n  return <Button onClick={() => cb(type)}>{children}</Button>;\r\n}\r\n\r\nfunction StaticTable() {\r\n  return (\r\n    <>\r\n      <Table singleLine>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Difficulty</Table.HeaderCell>\r\n            <Table.HeaderCell>Score Range</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>Fast</Table.Cell>\r\n            <Table.Cell>10 - 14</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Very Fast</Table.Cell>\r\n            <Table.Cell>15 - 20 </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Insane</Table.Cell>\r\n            <Table.Cell>21 - 26</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row warning>\r\n            <Table.Cell>\r\n              Legend\r\n              <Popup\r\n                position=\"bottom center\"\r\n                content=\"Requires login\"\r\n                trigger={<Icon name=\"attention\" />}\r\n              />\r\n            </Table.Cell>\r\n            <Table.Cell>43 - 50</Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction StatusElement({ status }) {\r\n  return (\r\n    <span>\r\n      <style>\r\n        {` \r\n          .pulse {\r\n            display: block;\r\n            cursor: pointer;\r\n            animation: ${status === \"paused\" ? \"none\" : \"pulse 0.4s infinite\"};\r\n          .pulse:hover {\r\n            animation: none;\r\n          }\r\n        `}\r\n      </style>\r\n      <Icon\r\n        className={status === \"running\" ? \"pulse\" : \"\"}\r\n        name=\"heart\"\r\n        size=\"large\"\r\n        color={status === \"running\" ? \"red\" : \"grey\"}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default withName(gameWrapper);\r\n","import React from \"react\";\r\n\r\nexport const withName = (Component) => {\r\n  return (props) => {\r\n    return <Component {...props} />;\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Segment,\r\n  Button,\r\n  Popup,\r\n  GridColumn,\r\n  Label,\r\n  Divider,\r\n  Dropdown,\r\n  Header,\r\n  Checkbox,\r\n} from \"semantic-ui-react\";\r\n\r\nexport default ({ children }) => {\r\n  const [dark, setDark] = useState(false);\r\n\r\n  return (\r\n    <Container id=\"main-page\">\r\n      <style>\r\n        {`\r\n            body {\r\n              background-color: ${dark ? \"#2F4F4F\" : \"#F0F8FF\"};\r\n              transition: ease-in 0.2s;  \r\n            }\r\n            .ui.header, p {\r\n              color: ${dark ? \"#F0F8FF\" : \"#696969\"}\r\n            }\r\n            #main-checkbox {\r\n              background-color: red;\r\n            }\r\n            .ui.fitted.toggle.checkbox {\r\n              background-color: #778899;\r\n              border-radius: 10px\r\n            }\r\n            .ui.vertical.menu {\r\n              background-color: ${dark ? \"#F0F8FF\" : \"#483D8B\"};\r\n            }\r\n            #score-span {\r\n              color: ${dark ? \"#696969\" : \"#F0FFFF\"};\r\n            }\r\n           .divider.default.text {\r\n             color: #F0F8FF !important;\r\n           }\r\n            \r\n          `}\r\n      </style>\r\n      <Grid stackable>\r\n        <Grid.Row columns={2} style={{ marginTop: \"1.5rem\" }}>\r\n          <Grid.Column width={4}>\r\n            <Header as=\"h3\">Let's have a fun</Header>\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" width={1}>\r\n            <Checkbox toggle onChange={() => setDark(!dark)} />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          {children}\r\n          {/* <Grid.Column color=\"red\">{children[1]}</Grid.Column>\r\n          <Grid.Column color=\"yellow\">{children[2]}</Grid.Column> */}\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState, useCallback } from \"react\";\nimport _ from \"lodash\";\nimport {\n  Grid,\n  Segment,\n  Button,\n  Popup,\n  GridColumn,\n  Label,\n  Divider,\n  Dropdown,\n  Header,\n} from \"semantic-ui-react\";\n\nimport useSnake from \"hooks/useSnake.js\";\n\nimport Wrapper from \"./gameWrapper\";\n\nimport MyComponent from \"./test\";\nimport Layout from \"./template\";\n\nconst App = () => {\n  // console.log(\"Welcome\");\n  return (\n    <Layout>\n      <Wrapper />\n    </Layout>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}